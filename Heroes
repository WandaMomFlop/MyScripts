ocal NewValue = Instance.new("StringValue",workspace)
    NewValue.Name = "Teleport Value"
    local Value = game:GetService("Workspace")["Teleport Value"].Value
    local list = {
        "Agatha Stake",
        "Fantastic Four Tower",
        "Avengers Tower",
        "K-Ware",
        "Char Select Top",
        "K-Ware Tower"
    }
    local RunService = game:GetService("RunService")
    local Rep = game:GetService("ReplicatedStorage")
    local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/Jxereas/UI-Libraries/main/notification_gui_library.lua", true))()
    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/TheActingZont345/AstroWare-X/main/Kavo%20Ui.lua"))()
    local Gui = Library.CreateLib("K-Ware | Heroes: Online World | EmmaFrost#0001", "Ocean")
    local Misc = Gui:NewTab("Misc")
    local M = Misc:NewSection("Misc")
    local Teleports = Gui:NewTab("Teleports")
    local T = Teleports:NewSection("Teleports")
    local Animation = Gui:NewTab("Animation")
    local A = Animation:NewSection("Animation")
    local Gui = Gui:NewTab("Gui")
    local G = Gui:NewSection("Gui")
    M:NewToggle("Spam Punch Noise",
        "",
        function(Punch)
            _G.SPAM = Punch
            while _G.SPAM == true do
                wait()
                local plrpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                local args = {
                    [1] = "MeleeLast"
                }
 
                game:GetService("ReplicatedStorage").Knit.Services.SoundService.RE.Sound:FireServer(unpack(args))
            end
        end
    )
    M:NewToggle("Aim Lock",
        "Use As Someone Who Has To Aim",
        function(aim)
            if aim == true then
                local Camera = workspace.CurrentCamera
                local Players = game:GetService("Players")
                
                local UserInputService = game:GetService("UserInputService")
                local TweenService = game:GetService("TweenService")
                local LocalPlayer = Players.LocalPlayer
                local Holding = false
        
                _G.AimbotEnabled = true
                _G.TeamCheck = false -- If set to true then the script would only lock your aim at enemy team members.
                _G.AimPart = "HumanoidRootPart" -- Where the aimbot script would lock at.
                _G.Sensitivity = 0 -- How many seconds it takes for the aimbot script to officially lock onto the target's aimpart.
        
                _G.CircleSides = 64 -- How many sides the FOV circle would have.
                _G.CircleColor = Color3.fromRGB(255, 255, 255) -- (RGB) Color that the FOV circle would appear as.
                _G.CircleTransparency = 0.7 -- Transparency of the circle.
                _G.CircleRadius = 80 -- The radius of the circle / FOV.
                _G.CircleFilled = false -- Determines whether or not the circle is filled.
                _G.CircleVisible = true -- Determines whether or not the circle is visible.
                _G.CircleThickness = 0 -- The thickness of the circle.
        
                local FOVCircle = Drawing.new("Circle")
                FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                FOVCircle.Radius = _G.CircleRadius
                FOVCircle.Filled = _G.CircleFilled
                FOVCircle.Color = _G.CircleColor
                FOVCircle.Visible = _G.CircleVisible
                FOVCircle.Radius = _G.CircleRadius
                FOVCircle.Transparency = _G.CircleTransparency
                FOVCircle.NumSides = _G.CircleSides
                FOVCircle.Thickness = _G.CircleThickness
        
                local function GetClosestPlayer()
                    local MaximumDistance = _G.CircleRadius
                    local Target = nil
        
                    for _, v in next, Players:GetPlayers() do
                        if v.Name ~= LocalPlayer.Name then
                            if _G.TeamCheck == true then
                                if v.Team ~= LocalPlayer.Team then
                                    if v.Character ~= nil then
                                        if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                                            if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                                                local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                                                local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                                                
                                                if VectorDistance < MaximumDistance then
                                                    Target = v
                                                end
                                            end
                                        end
                                    end
                                end
                            else
                                if v.Character ~= nil then
                                    if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                                        if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                                            local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                                            local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                                            
                                            if VectorDistance < MaximumDistance then
                                                Target = v
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
        
                    return Target
                end
        
                UserInputService.InputBegan:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
                        Holding = true
                    end
                end)
        
                UserInputService.InputEnded:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
                        Holding = false
                    end
                end)
        
                RunService.RenderStepped:Connect(function()
                    FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
                    FOVCircle.Radius = _G.CircleRadius
                    FOVCircle.Filled = _G.CircleFilled
                    FOVCircle.Color = _G.CircleColor
                    FOVCircle.Visible = _G.CircleVisible
                    FOVCircle.Radius = _G.CircleRadius
                    FOVCircle.Transparency = _G.CircleTransparency
                    FOVCircle.NumSides = _G.CircleSides
                    FOVCircle.Thickness = _G.CircleThickness
        
                    if Holding == true and _G.AimbotEnabled == true then
                        TweenService:Create(Camera, TweenInfo.new(_G.Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character[_G.AimPart].Position)}):Play()
                    end
                end)
            else
                _G.AimbotEnabled = false
                _G.CircleVisible = false
            end
        end
    )
    M:NewToggle("Farm Random Player",
        "",
        function(Toggle5)
            _G.Farmingz = Toggle5
            if _G.Farmingz == true then
                _G.Farming = true
                local plrs = game.Players
                local num = math.random(1, #plrs:GetChildren())
                local user = plrs:GetChildren()[num]
                local Attacking = nil
                
                local function attack()
                    if _G.Farming == true then
                        local Players = game:GetService("Players")
                        local msg = user.Name
                        local function findPlayer(stringg)
                            for _, v in pairs(Players:GetPlayers()) do
                                if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                                    return v
                                end
                            end
                        end
                        local plr = findPlayer(msg)
                        if plr == game.Players.LocalPlayer then
                            return
                        else
                            local Target = plr.Character
                            local function hit()
                                local args = {
                                    [1] = {
                                        [1] = Target
                                    },
                                    [2] = 3
                                }
                                        
                                game:GetService("ReplicatedStorage").Knit.Services.MeleeService.RE.Hit:FireServer(unpack(args))        
                            end
                            local function tp()
                                local TargetPos = Target.HumanoidRootPart.CFrame
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = TargetPos
                            end
                            tp()
                            hit()
                        end
                    end
                end
                local Target = user.Character
                local function Wait()
                    repeat
                        print("Attacking")
                        wait()
                    until _G.Farming == false
                end
                Attacking = RunService.Stepped:Connect(attack)
                Wait()
                Attacking:Disconnect()
            else
                _G.Farming = false
                Attacking:Disconnect()
            end
        end
    )
    M:NewToggle("Float",
        "If true then you wil float use q and e to go up and down",
        function(FloatValuing)
            if FloatValuing == true then
                _G.Floating = true
                local function Wait()
                    repeat
                        wait()
                    until _G.Floating == false
                end
                _G.AllowFloating = true
                if _G.AllowFloating == true then
                        local RunService = game:GetService("RunService")
                        Floating = false
                        function randomString()
                            local length = math.random(10,20)
                            local array = {}
                            for i = 1, length do
                                array[i] = string.char(math.random(32, 126))
                            end
                            return table.concat(array)
                        end
                        function getRoot(char)
                            local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
                            return rootPart
                        end
                        floatName = randomString()
                        local value = true
                        local speaker = game.Players.LocalPlayer
                        IYMouse = game.Players.LocalPlayer:GetMouse()
                        if value == true then
                            Floating = true
                            local pchar = speaker.Character
                            if pchar and not pchar:FindFirstChild(floatName) then
                                task.spawn(function()
                                    local Float = Instance.new('Part')
                                    Float.Name = floatName
                                    Float.Parent = pchar
                                    Float.Transparency = 1
                                    Float.Size = Vector3.new(2,0.2,1.5)
                                    Float.Anchored = true
                                    local FloatValue = -3.1
                                    Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0,FloatValue,0)
                                    --notify('Float','Float Enabled (Q = down & E = up)')
                                    qUp = IYMouse.KeyUp:Connect(function(KEY)
                                        if KEY == 'q' then
                                            FloatValue = FloatValue + 0.5
                                        end
                                    end)
                                    eUp = IYMouse.KeyUp:Connect(function(KEY)
                                        if KEY == 'e' then
                                            FloatValue = FloatValue - 0.5
                                        end
                                    end)
                                    qDown = IYMouse.KeyDown:Connect(function(KEY)
                                        if KEY == 'q' then
                                            FloatValue = FloatValue - 0.5
                                        end
                                    end)
                                    eDown = IYMouse.KeyDown:Connect(function(KEY)
                                        if KEY == 'e' then
                                            FloatValue = FloatValue + 0.5
                                        end
                                    end)
                                    floatDied = speaker.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
                                        FloatingFunc:Disconnect()
                                        Float:Destroy()
                                        qUp:Disconnect()
                                        eUp:Disconnect()
                                        qDown:Disconnect()
                                        eDown:Disconnect()
                                        floatDied:Disconnect()
                                    end)
                                    local function FloatPadLoop()
                                        if pchar:FindFirstChild(floatName) and getRoot(pchar) then
                                            Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0,FloatValue,0)
                                        else
                                            FloatingFunc:Disconnect()
                                            Float:Destroy()
                                            qUp:Disconnect()
                                            eUp:Disconnect()
                                            qDown:Disconnect()
                                            eDown:Disconnect()
                                            floatDied:Disconnect()
                                        end
                                    end         
                                    local hb = RunService.Heartbeat
                                    FloatingFunc = hb:Connect(FloatPadLoop)
                                end)
                            end
                        Wait()
                        Floating = false
                        local pchar = speaker.Character
                        --notify('Float','Float Disabled')
                        if pchar:FindFirstChild(floatName) then
                            pchar:FindFirstChild(floatName):Destroy()
                        end
                        if floatDied then
                            FloatingFunc:Disconnect()
                            qUp:Disconnect()
                            eUp:Disconnect()
                            qDown:Disconnect()
                            eDown:Disconnect()
                            floatDied:Disconnect()
                        end
                    end
                end
            else
                _G.Floating = false
            end
        end
    )
    M:NewToggle("Auto Block",
        "",
        function(AutoBlock)
            if AutoBlock == true then
                local function AutoBlock()
                    if game.Players.LocalPlayer.Character.Humanoid.Health < 100 then
                        local args = {
                            [1] = "Q",
                            [2] = true,
                            [3] = "CurrentAbility"
                        }
                        
                        game:GetService("ReplicatedStorage").Knit.Services.AbilityService.RF.AbilityRequest:InvokeServer(unpack(args))
                    elseif game.Players.LocalPlayer.Character.Humanoid.Health > 200 then
                        local args = {
                            [1] = "Q",
                            [2] = false
                        }
                        
                        game:GetService("ReplicatedStorage").Knit.Services.AbilityService.RF.AbilityRequest:InvokeServer(unpack(args))
                    end
                end
                _G.AutoBlocking = true
                local function Wait()
                    repeat 
                        wait()
                    until _G.AutoBlocking == false
                end
                AutoBlock = game:GetService("RunService").Stepped:Connect(AutoBlock)
                Wait()
                AutoBlock:Disconnect()
            else
                _G.AutoBlocking = false
            end
        end
    )
    M:NewTextBox("Kill Player",
        "Kills A Player",
        function(user)
            _G.Farming = true
            local Attacking = nil
            local function attack()
                if _G.Farming == true then
                    local Players = game:GetService("Players")
                    local msg = user
                    local function findPlayer(stringg)
                        for _, v in pairs(Players:GetPlayers()) do
                            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                                return v
                            end
                        end
                    end
                    local plr = findPlayer(msg)
                    if plr == game.Players.LocalPlayer then
                        return
                    else
                        local Target = plr.Character
                        local function hit()
                            local args = {
                                [1] = {
                                    [1] = Target
                                },
                                [2] = 3
                            }
                                    
                            game:GetService("ReplicatedStorage").Knit.Services.MeleeService.RE.Hit:FireServer(unpack(args))        
                        end
                        local function tp()
                            local TargetPos = Target.HumanoidRootPart.CFrame
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = TargetPos
                        end
                        tp()
                        hit()
                    end
                end
            end
            local Players = game:GetService("Players")
            local msg = user
            local function findPlayer(stringg)
                for _, v in pairs(Players:GetPlayers()) do
                    if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                        return v
                    end
                end
            end
            local plr = findPlayer(msg)
            local Target = plr.Character
            local function Wait()
                repeat
                    print("Attacking")
                    wait()
                until Target.Humanoid.Health == 0
            end
            Attacking = RunService.Stepped:Connect(attack)
            Wait()
            Attacking:Disconnect()
        end
    )
    M:NewColorPicker("Name Tag Color",
        "",
        Color3.fromRGB(255, 255, 255),
        function(color)
            game:GetService("Players").LocalPlayer.Character.Head.NameTag.Frame.NAME.TextColor3 = color
        end
    )
    M:NewButton("Remove Purple Sky",
        "",
        function()
            local sky = game:GetService("Lighting"):FindFirstChild("Sky")
            if sky then
                sky:Destroy()
            end
        end
    )
    M:NewButton("Infinite Yeild",
        "",
        function()
            loadstring(game:HttpGet(("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"), true))()
        end
    )
    M:NewButton("Chest Notifier",
        "",
        function()
            game:GetService("Workspace").Assets.ChildAdded:Connect(function(Item)
                if Item.Name == "Rare" or "Common" or "Mystic" or "Legendary" then
                    for i,v in pairs(Item) do
                        local Notif = Notification.new("info", "Chest Notification", "Chest Have Spawned")
                        Notif:deleteTimeout(3)
                    end
                end
            end)
        end
    )
    M:NewButton("Become Invincible",
        "Must Have Atom Manipulation",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace"):FindFirstChild("AstroWareP2").CFrame
            wait(1)
            local function Sheild()
                local args = {
                    [1] = "Q",
                    [2] = true,
                    [3] = "CurrentAbility"
                }
                
                game:GetService("ReplicatedStorage").Knit.Services.AbilityService.RF.AbilityRequest:InvokeServer(unpack(args))
            end
            Sheild = game:GetService("RunService").Stepped:Connect(Sheild)
            wait()
            Sheild:Disconnect()
            wait(1)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(32, 4, -37)
        end
    )
    M:NewButton("Infinite Cam Zoom",
        "Allows You To Scroll You Cam Out As For As You Choose",
        function()
            game.Players.LocalPlayer.CameraMaxZoomDistance = 100000000000000
        end
    )
    M:NewButton("Rejoin Server",
        "",
        function()
            TeleportService = game:GetService("TeleportService")
            TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
        end
    )
    M:NewButton("Copy Server Join Script",
        "Copies Join Code Too ClipBoard",
        function()
            setclipboard([[
            TeleportService = game:GetService("TeleportService")
            TeleportService:TeleportToPlaceInstance(]]..game.PlaceId..[[,"]]..game.JobId..[[", game.Players.LocalPlayer)
            ]])
        end
    )
    M:NewButton("Hide Name",
        "",
        function()
            local Name = game:GetService("Players").LocalPlayer.Character.Head.NameTag.Frame:FindFirstChild("NAME")
            if Name then
                Name.Parent = Workspace
                Name:Destroy()
            else
                local Library =
                    loadstring(            game:HttpGet(                "https://raw.githubusercontent.com/RegularVynixu/IreXion-UI-Library/main/Revamp/IreXion%20UI%20Library"
                    )
                )()
                Library:Notify("Your Name Is Already Hidden")
            end
        end
    )
    M:NewButton("Teleport To Chest",
        "",
        function()
            local Assets =game:GetService("Workspace"):FindFirstChild("Assets")
            if Assets then
                local Rare = Assets:FindFirstChild("Rare")
                local Common = Assets:FindFirstChild("Common")
                local Mystic = Assets:FindFirstChild("Mythic")
                local Mystic = Assets:FindFirstChild("Legendary")
                if Common or Mystic or Rare then
                    if Common then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Common.Top.CFrame
                        Common.Top:Destroy()
                    elseif Mystic then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Mystic.Top.CFrame
                        Mystic.Top:Destroy()
                    elseif Rare then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Rare.Top.CFrame
                        Rare.Top:Destroy()
                    elseif Legendary then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Legendary.Top.CFrame
                        Legendary.Top:Destroy()
                    end
                else
                    local Notif = Notification.new("info", "Error", "No Mystic Chest")
                    local Notif2 = Notification.new("info", "Error", "No Rare Chest")
                    local Notif3 = Notification.new("info", "Error", "No Common Chest")
                    Notif:deleteTimeout(3)
                    Notif2:deleteTimeout(3)
                    Notif3:deleteTimeout(3)
                end
            end
        end
    )
    M:NewButton("Auto Break Suffocation Bubble",
        "",
        function()
        
        end
    )
    M:NewButton("Redeem Available Codes",
        "",
        function()
            local Valid_Codes = {
                "JUNETEENTH",
                "DADHEROESDAY",
                "NOLONGERSECRET",
                "WORLDCODE",
                "KLARION",
                "HEROESFAMILY",
                "RAINBOW",
                "DATAVIBES",
                "KAMS",
                "LIGHTNINGTODAYJANESkin",
                "RAVENISOUT",
                "HAPPYEID",
                "YAYCOINS",
                "1MHEROVISITS",
                "RANDOMCOINS",
                "SYNISCOOL",
                "HAPPYEASTER",
                "HOMEWORLD",
                "HEROESONLINE",
                "100KCOINS",
                "HEROESONLINEWORLD",
                "VOICECODE",
                "SAYHELLO",
                "MAINTENANCEWORK",
                "6KCOINS",
                "RELAUNCH",
                "3KCOINS",
                "2KCOINS",
                "1KCOINS",
                "COINSTODAY",
                "MAINTENANCE",
                "17KLIKES",
                "STORMXBLACKPANTHER",
                "15KLIKES",
                "5MILLION",
                "13KLIKES",
                "6MILLION",
                "11KLIKES",
                "10KLIKES",
                "SUPERGIRL",
                "9KLIKES",
                "8KLIKES",
                "1KPLAYERS",
                "NEWYEARS",
                "THANKSHERO",
                "VICTORY",
                "KAMSIFIED",
                "CELEBRATION",
                "SUMMERCODE",
                "JANEFOSTER",
                "BACKERINO",
                "NOTOHATERS"
            }
            for i, v in pairs(Valid_Codes) do
                local args = {
                    [1] = v
                }
 
                game:GetService("ReplicatedStorage").Knit.Services.CodesService.RF.Redeem:InvokeServer(unpack(args))
            end
        end
    )
    T:NewDropdown("Teleport To",
        "", 
        list, 
        function(option)
            local function Create()
                local OldValue = game:GetService("Workspace"):FindFirstChild("Place")
                if OldValue then
                    OldValue:Destroy()
                end
                local Item = Instance.new("StringValue")
                Item.Parent = game:GetService("Workspace")
                Item.Name = "Place"
            end
            Create()
            game:GetService("Workspace")["Place"].Value = option
        end
    )
    T:NewKeybind("Location Teleportation",
        "",
        Enum.KeyCode.C,
        function()
            if IsTyping then return end
                local Area = CFrame.new(nil,nil,nil)
                if game:GetService("Workspace")["Place"].Value == "Agatha Stake" then
                    Area = CFrame.new(-1342, 286, 1448)
                elseif game:GetService("Workspace")["Place"].Value == "Avengers Tower" then
                    Area = CFrame.new(-1133, 293, -54)
                elseif game:GetService("Workspace")["Place"].Value == "Fantastic Four Tower" then
                    Area = CFrame.new(-989, 368, 273)
                elseif game:GetService("Workspace")["Place"].Value == "AstroWare" then
                    Area = game:GetService("Workspace"):FindFirstChild("AstroWareP2").CFrame
                elseif game:GetService("Workspace")["Place"].Value == "Char Select Top" then
                    Area = CFrame.new(-1, 21952, 69)
                elseif  game:GetService("Workspace")["Place"].Value == "AstroWare Tower" then
                    Area = CFrame.new(9831, 107834, 59800)
                else
                    Area = CFrame.new(nil,nil,nil)
                end
                local function Teleport()
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Area
                end
                Teleport()
        end
    )
    T:NewButton("Teleport To Agatha Stake",
        "",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1342, 286, 1448)
        end
    )
    T:NewButton("Teleport To Limbo",
        "",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(379, 197, -52332)
        end
    )
    T:NewButton("Teleport To Trigon Hells",
        "",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2679, -305, 13819)
        end
    )
    T:NewButton("Teleport To Main Area",
        "",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-38, 4, -61)
        end
    )
    T:NewButton("Teleport To K-Ware Tower",
        "",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(9831, 107834, 59800)
        end
    )
    T:NewButton("Teleport To Fantastic 4 Tower",
        "",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-989, 368, 273)
        end
    )
    T:NewButton("Teleport To Avenger's Tower",
        "",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1133, 293, -54)
        end
    )
    T:NewButton("Teleport To AstroWare Platform",
        "",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace"):FindFirstChild("HumanTP").CFrame
        end
    )
    T:NewButton("Teleport To Character Selection",
        "",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game:GetService("Workspace").HumanoidRootPart.CFrame
        end
    )
    T:NewButton("Teleport To Top Of Character Selection",
        "",
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1, 21952, 69)
        end
    )
    A:NewButton("Stop Animations",
        "",
        function ()
            speaker = game.Players.LocalPlayer
            local Char = speaker.Character
            local Human = Char and Char:WaitForChild('Humanoid', 15)
            local Animate = Char and Char:WaitForChild('Animate', 15)
            if not Human or not Animate then
                return 
            end
            Animate.Disabled = true
            for _, v in ipairs(Human:GetPlayingAnimationTracks()) do
                v:Stop()
            end
            Animate.Disabled = false
        end
    )
    A:NewButton("CharmCaster Floating Anim",
        "",
        function ()
            Character = game:GetService("Players").LocalPlayer.Character
            Character.Animate.run.RunAnim.AnimationId = "rbxassetid://9222593289"
            Character.Animate.walk.WalkAnim.AnimationId = "rbxassetid://9222594135"
            Character.Animate.idle.Animation1.AnimationId = "rbxassetid://9222571061"
            Character.Animate.swim.Swim.AnimationId = "rbxassetid://9222594135"
            Character.Animate.swimidle.SwimIdle.AnimationId = "rbxassetid://9222571061"
        end
    )
    A:NewButton("Agatha Walking Anim",
        "",
        function ()
            Character = game:GetService("Players").LocalPlayer.Character
            Character.Animate.run.RunAnim.AnimationId = "rbxassetid://9130449427"
            Character.Animate.walk.WalkAnim.AnimationId = "rbxassetid://9130452440"
            Character.Animate.idle.Animation1.AnimationId = "rbxassetid://9130445966"
            Character.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=913384386"
            Character.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=913389285"
        end
    )
    A:NewButton("Sexy Walking Anim",
        "",
        function ()
            Character = game:GetService("Players").LocalPlayer.Character
            Character.Animate.run.RunAnim.AnimationId = "rbxassetid://9181999112"
            Character.Animate.walk.WalkAnim.AnimationId = "rbxassetid://9182001995"
            Character.Animate.idle.Animation1.AnimationId = "rbxassetid://9181995926"
            Character.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=913384386"
            Character.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=913389285"
        end
    )
    A:NewButton("Normal Walking Anim",
        "",
        function ()
            Character = game:GetService("Players").LocalPlayer.Character
            Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=913376220"
            Character.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=913402848"
            Character.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=507766388"
            Character.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=913384386"
            Character.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=913389285"
        end
    )
    A:NewButton("Atom Eve's Walking Anim",
        "",
        function ()
            Character = game:GetService("Players").LocalPlayer.Character
            Character.Animate.run.RunAnim.AnimationId = "rbxassetid://9632105688"
            Character.Animate.walk.WalkAnim.AnimationId = "rbxassetid://9632107219"
            Character.Animate.idle.Animation1.AnimationId = "rbxassetid://9632082928"
            Character.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=913384386"
            Character.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=913389285"
        end
    )
    G:NewKeybind("Toggle Gui",
        "",
        Enum.KeyCode.RightControl,
        function()
            Library:ToggleUI()
        end
    )
end
HeroesGui()
